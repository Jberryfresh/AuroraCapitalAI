-- Aurora Capital AI - Initial Schema
-- Includes proper indexes and constraints for financial data integrity

-- Companies table - core entity
CREATE TABLE IF NOT EXISTS companies (
    id SERIAL PRIMARY KEY,
    ticker VARCHAR(10) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    sector VARCHAR(100),
    industry VARCHAR(100),
    country VARCHAR(50),
    currency VARCHAR(3),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Financial fundamentals - time series data
CREATE TABLE IF NOT EXISTS financial_data (
    id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES companies(id),
    report_date DATE NOT NULL,
    report_type VARCHAR(10) CHECK (report_type IN ('10-K', '10-Q')),
    -- Income Statement
    revenue DECIMAL(20,2),
    operating_income DECIMAL(20,2),
    net_income DECIMAL(20,2),
    eps_basic DECIMAL(10,3),
    eps_diluted DECIMAL(10,3),
    -- Balance Sheet
    total_assets DECIMAL(20,2),
    total_liabilities DECIMAL(20,2),
    total_equity DECIMAL(20,2),
    cash_and_equivalents DECIMAL(20,2),
    -- Cash Flow
    operating_cash_flow DECIMAL(20,2),
    investing_cash_flow DECIMAL(20,2),
    financing_cash_flow DECIMAL(20,2),
    -- Metrics
    market_cap DECIMAL(20,2),
    pe_ratio DECIMAL(10,3),
    price_to_book DECIMAL(10,3),
    debt_to_equity DECIMAL(10,3),
    current_ratio DECIMAL(10,3),
    -- Metadata
    source_url TEXT,
    source_name VARCHAR(100),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    -- Constraints
    UNIQUE(company_id, report_date, report_type)
);

-- News and sentiment data
CREATE TABLE IF NOT EXISTS news_sentiment (
    id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES companies(id),
    published_at TIMESTAMP WITH TIME ZONE NOT NULL,
    title TEXT NOT NULL,
    summary TEXT,
    source_name VARCHAR(255) NOT NULL,
    source_url TEXT NOT NULL,
    sentiment_score DECIMAL(4,3) CHECK (sentiment_score >= -1 AND sentiment_score <= 1),
    sentiment_magnitude DECIMAL(4,3) CHECK (sentiment_magnitude >= 0 AND sentiment_magnitude <= 1),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Research reports - generated by our agents
CREATE TABLE IF NOT EXISTS research_reports (
    id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES companies(id),
    report_type VARCHAR(50) NOT NULL, -- e.g., 'quick_summary', 'full_analysis'
    report_date DATE NOT NULL,
    content TEXT NOT NULL,
    metadata JSONB NOT NULL DEFAULT '{}',
    -- Track data sources and versions
    data_sources JSONB NOT NULL DEFAULT '{}',
    agent_versions JSONB NOT NULL DEFAULT '{}',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    -- Ensure one report type per company per day
    UNIQUE(company_id, report_type, report_date)
);

-- Indexes for performance
CREATE INDEX idx_companies_ticker ON companies(ticker);
CREATE INDEX idx_financial_data_company_date ON financial_data(company_id, report_date);
CREATE INDEX idx_news_company_date ON news_sentiment(company_id, published_at);
CREATE INDEX idx_reports_company_date ON research_reports(company_id, report_date);

-- Update function for timestamps
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Auto-update timestamps
CREATE TRIGGER update_companies_updated_at
    BEFORE UPDATE ON companies
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();
